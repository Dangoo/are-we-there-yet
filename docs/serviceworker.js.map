{"version":3,"sources":["serviceworker.js"],"names":["self","addEventListener","event","console","info","waitUntil","caches","delete","then","skipWaiting","respondWith","open","cache","match","request","response","fetch","put","clone"],"mappings":";AAAAA,KAAKC,iBAAiB,UAAW,SAAAC,GAC7BC,QAAQC,KAAK,gCAEbF,EAAMG,UAEFC,OAAOC,OAAO,WAAWC,KAAK,WAAMR,OAAAA,KAAKS,mBAIjDT,KAAKC,iBAAiB,QAAS,SAAAC,GAC3BA,EAAMQ,YACFJ,OAAOK,KAAK,WAAWH,KAAK,SAAAI,GACxBA,OAAAA,EAAMC,MAAMX,EAAMY,SAASN,KAAK,SAAAO,GACrBA,OAAAA,GAAYC,MAAMd,EAAMY,SAASN,KAAK,SAAAO,GAElCA,OADPH,EAAMK,IAAIf,EAAMY,QAASC,EAASG,SAC3BH","file":"serviceworker.js","sourceRoot":"../src","sourcesContent":["self.addEventListener('install', event => {\n    console.info('New ServiceWorker installed!');\n\n    event.waitUntil(\n        // Remove old cache from prev. ServiceWorker\n        caches.delete('offline').then(() => self.skipWaiting())\n    );\n});\n\nself.addEventListener('fetch', event => {\n    event.respondWith(\n        caches.open('offline').then(cache => (\n            cache.match(event.request).then(response => {\n                return response || fetch(event.request).then(response => {\n                    cache.put(event.request, response.clone());\n                    return response;\n                });\n            })\n        ))\n    );\n});\n"]}